{"ast":null,"code":"import StockUser from '../../../../models/stockuser.model';\nimport { randomBytes } from \"crypto\";\nexport default (async (req, res) => {\n  try {\n    const code = randomBytes(12).toString('hex');\n    ;\n    console.log(req.query.number);\n    await StockUser.updateOne({\n      _id: req.query.number\n    }, {\n      $set: {\n        code: code,\n        signed: false\n      }\n    }, {\n      upsert: true,\n      setDefaultsOnInsert: true\n    });\n    console.log((await StockUser.find({\n      \"_id\": req.query.number\n    }))[0]);\n    res.status(200).send(code);\n  } catch (error) {\n    res.status(502).send(error);\n  }\n});","map":{"version":3,"sources":["D:/code/stock_api/pages/api/units/users/add.ts"],"names":["StockUser","randomBytes","req","res","code","toString","console","log","query","number","updateOne","_id","$set","signed","upsert","setDefaultsOnInsert","find","status","send","error"],"mappings":"AACA,OAAOA,SAAP,MAAsB,oCAAtB;AACA,SAAQC,WAAR,QAA0B,QAA1B;AAEA,gBAAe,OAAOC,GAAP,EAAwBC,GAAxB,KAA6C;AAC1D,MAAI;AACF,UAAMC,IAAI,GAAGH,WAAW,CAAC,EAAD,CAAX,CAAgBI,QAAhB,CAAyB,KAAzB,CAAb;AAA6C;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,KAAJ,CAAUC,MAAtB;AACA,UAAMT,SAAS,CAACU,SAAV,CAAoB;AAACC,MAAAA,GAAG,EAAET,GAAG,CAACM,KAAJ,CAAUC;AAAhB,KAApB,EAA6C;AAACG,MAAAA,IAAI,EAAE;AAAER,QAAAA,IAAI,EAAEA,IAAR;AAAcS,QAAAA,MAAM,EAAE;AAAtB;AAAP,KAA7C,EAAoF;AAACC,MAAAA,MAAM,EAAG,IAAV;AAAgBC,MAAAA,mBAAmB,EAAE;AAArC,KAApF,CAAN;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,MAAMP,SAAS,CAACgB,IAAV,CAAe;AAAC,aAAOd,GAAG,CAACM,KAAJ,CAAUC;AAAlB,KAAf,CAAP,EAAkD,CAAlD,CAAZ;AACAN,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,IAArB;AACD,GAND,CAME,OAAOe,KAAP,EAAc;AACdhB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AAEF,CAXD","sourcesContent":["import { NowRequest, NowResponse } from '@now/node'\r\nimport StockUser from '../../../../models/stockuser.model'\r\nimport {randomBytes} from \"crypto\"\r\n\r\nexport default async (req: NowRequest, res: NowResponse) => {\r\n  try {\r\n    const code = randomBytes(12).toString('hex');;\r\n    console.log(req.query.number)\r\n    await StockUser.updateOne({_id: req.query.number}, {$set: { code: code, signed: false }}, {upsert : true, setDefaultsOnInsert: true});\r\n    console.log((await StockUser.find({\"_id\": req.query.number}))[0])\r\n    res.status(200).send(code);\r\n  } catch (error) {\r\n    res.status(502).send(error);\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}