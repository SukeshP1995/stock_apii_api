{"ast":null,"code":"import { Schema, Mongoose } from \"mongoose\";\nconst mongoose = new Mongoose();\nmongoose.connect(\"mongodb+srv://sukeshp:x21qkXQYjY5XbopS@cluster0-lxsof.mongodb.net/test?retryWrites=true\", {\n  useNewUrlParser: true\n});\nconst schema = new Schema({\n  _id: String,\n  code: {\n    type: String,\n    required: true\n  },\n  signedIn: {\n    type: Boolean,\n    default: true\n  }\n});\nschema.path('_id').validate(function (id) {\n  var regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n  return regex.test(id.text); // Assuming email has a text attribute\n}, 'The e-mail field cannot be empty.');\nexport default mongoose.model('StockUser', schema);","map":{"version":3,"sources":["D:/code/stock_api/models/stockuser.model.ts"],"names":["Schema","Mongoose","mongoose","connect","useNewUrlParser","schema","_id","String","code","type","required","signedIn","Boolean","default","path","validate","id","regex","test","text","model"],"mappings":"AAAA,SAAUA,MAAV,EAAkBC,QAAlB,QAAiC,UAAjC;AAEA,MAAMC,QAAQ,GAAG,IAAID,QAAJ,EAAjB;AAEAC,QAAQ,CAACC,OAAT,CAAiB,yFAAjB,EAA4G;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA5G;AAEA,MAAMC,MAAc,GAAG,IAAIL,MAAJ,CAAW;AAC9BM,EAAAA,GAAG,EAAEC,MADyB;AAE9BC,EAAAA,IAAI,EAAE;AAACC,IAAAA,IAAI,EAAEF,MAAP;AAAeG,IAAAA,QAAQ,EAAE;AAAzB,GAFwB;AAG9BC,EAAAA,QAAQ,EAAE;AAACF,IAAAA,IAAI,EAAEG,OAAP;AAAgBC,IAAAA,OAAO,EAAE;AAAzB;AAHoB,CAAX,CAAvB;AAMAR,MAAM,CAACS,IAAP,CAAY,KAAZ,EAAmBC,QAAnB,CAA4B,UAAUC,EAAV,EAAc;AACtC,MAAIC,KAAK,GAAG,6DAAZ;AACA,SAAOA,KAAK,CAACC,IAAN,CAAWF,EAAE,CAACG,IAAd,CAAP,CAFsC,CAEV;AAC9B,CAHF,EAGI,mCAHJ;AAKA,eAAejB,QAAQ,CAACkB,KAAT,CAAe,WAAf,EAA4Bf,MAA5B,CAAf","sourcesContent":["import  { Schema, Mongoose} from \"mongoose\"\r\n\r\nconst mongoose = new Mongoose();\r\n\r\nmongoose.connect(\"mongodb+srv://sukeshp:x21qkXQYjY5XbopS@cluster0-lxsof.mongodb.net/test?retryWrites=true\", { useNewUrlParser: true });\r\n\r\nconst schema: Schema = new Schema({\r\n    _id: String,\r\n    code: {type: String, required: true},\r\n    signedIn: {type: Boolean, default: true}\r\n});\r\n\r\nschema.path('_id').validate(function (id) {\r\n    var regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\r\n    return regex.test(id.text); // Assuming email has a text attribute\r\n }, 'The e-mail field cannot be empty.')\r\n\r\nexport default mongoose.model('StockUser', schema);"]},"metadata":{},"sourceType":"module"}