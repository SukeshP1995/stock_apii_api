{"ast":null,"code":"import Unit from '../../../models/unit.model';\nexport default (async (req, res) => {\n  try {\n    await Unit.find({\n      transactionType: \"Finance\"\n    }, {\n      financeName: 1\n    }).exec((err, docs) => {\n      console.log(docs);\n      if (err || docs == undefined || docs.length == 0) ;else {\n        docs.forEach(doc => {\n          Unit.findOneAndUpdate({\n            _id: doc._id\n          }, {\n            $set: {\n              financeName: doc.financeName.uppercase()\n            }\n          }).exec();\n        });\n      }\n    });\n    res.status(200).send(\"success\");\n  } catch (error) {\n    res.status(502).send(error);\n  }\n});","map":{"version":3,"sources":["D:/code/stock_api/pages/api/units/execute.ts"],"names":["Unit","req","res","find","transactionType","financeName","exec","err","docs","console","log","undefined","length","forEach","doc","findOneAndUpdate","_id","$set","uppercase","status","send","error"],"mappings":"AACA,OAAOA,IAAP,MAAiB,4BAAjB;AAEA,gBAAe,OAAOC,GAAP,EAAwBC,GAAxB,KAA6C;AACxD,MAAI;AACA,UAAMF,IAAI,CAACG,IAAL,CAAU;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAV,EAAwC;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAxC,EACDC,IADC,CACI,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAID,GAAG,IAAIC,IAAI,IAAIG,SAAf,IAA4BH,IAAI,CAACI,MAAL,IAAe,CAA/C,EACI,CADJ,KAEK;AACDJ,QAAAA,IAAI,CAACK,OAAL,CAAcC,GAAD,IAAS;AAClBd,UAAAA,IAAI,CAACe,gBAAL,CAAsB;AAACC,YAAAA,GAAG,EAAEF,GAAG,CAACE;AAAV,WAAtB,EAC4B;AAACC,YAAAA,IAAI,EAAE;AAACZ,cAAAA,WAAW,EAAES,GAAG,CAACT,WAAJ,CAAgBa,SAAhB;AAAd;AAAP,WAD5B,EAECZ,IAFD;AAGH,SAJD;AAKP;AACA,KAZC,CAAN;AAaAJ,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,SAArB;AACH,GAfD,CAeE,OAAOC,KAAP,EAAc;AACZnB,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACH;AACJ,CAnBD","sourcesContent":["import { NowRequest, NowResponse } from '@now/node'\r\nimport Unit from '../../../models/unit.model'\r\n\r\nexport default async (req: NowRequest, res: NowResponse) => {\r\n    try {\r\n        await Unit.find({transactionType: \"Finance\"}, {financeName: 1})\r\n            .exec((err, docs) => {\r\n                console.log(docs)\r\n                if (err || docs == undefined || docs.length == 0)\r\n                    ;\r\n                else {\r\n                    docs.forEach((doc) => {\r\n                        Unit.findOneAndUpdate({_id: doc._id}, \r\n                                                    {$set: {financeName: doc.financeName.uppercase()}})\r\n                        .exec();\r\n                    });\r\n            }\r\n            });   \r\n        res.status(200).send(\"success\");\r\n    } catch (error) {\r\n        res.status(502).send(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}