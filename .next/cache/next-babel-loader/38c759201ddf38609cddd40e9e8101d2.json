{"ast":null,"code":"import StockUser from '../../../../models/stockuser.model';\nimport { randomBytes } from \"crypto\";\nimport Cors from 'cors'; // Initializing the cors middleware\n\nconst cors = Cors({\n  methods: ['GET', 'HEAD']\n});\n\nfunction runMiddleware(req, res, fn) {\n  return new Promise((resolve, reject) => {\n    fn(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}\n\nexport default (async (req, res) => {\n  await runMiddleware(req, res, cors);\n\n  try {\n    console.log(req.body);\n    var code = randomBytes(12).toString('hex');\n    await StockUser.updateOne({\n      _id: req.body.phoneNo\n    }, {\n      $set: {\n        userName: req.body.userName,\n        grantAgeWise: req.body.grantAgeWise,\n        grantUpload: req.body.grantUpload,\n        grantEdit: req.body.grantEdit,\n        grantSale: req.body.grantSale,\n        code: code\n      }\n    }, {\n      upsert: true,\n      setDefaultsOnInsert: true\n    });\n    console.log(await StockUser.find({\n      \"_id\": req.body.phoneNo\n    }));\n    res.status(200).send(JSON.stringify(code));\n  } catch (error) {\n    res.status(502).send(error);\n  }\n});","map":{"version":3,"sources":["D:/code/stock_api/pages/api/units/users/add.ts"],"names":["StockUser","randomBytes","Cors","cors","methods","runMiddleware","req","res","fn","Promise","resolve","reject","result","Error","console","log","body","code","toString","updateOne","_id","phoneNo","$set","userName","grantAgeWise","grantUpload","grantEdit","grantSale","upsert","setDefaultsOnInsert","find","status","send","JSON","stringify","error"],"mappings":"AACA,OAAOA,SAAP,MAAsB,oCAAtB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,MAAMC,IAAI,GAAGD,IAAI,CAAC;AAChBE,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR;AADO,CAAD,CAAjB;;AAIA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,EAAjC,EAAqC;AACnC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,IAAAA,EAAE,CAACF,GAAD,EAAMC,GAAN,EAAYK,MAAD,IAAY;AACvB,UAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3B,eAAOF,MAAM,CAACC,MAAD,CAAb;AACD;;AAED,aAAOF,OAAO,CAACE,MAAD,CAAd;AACD,KANC,CAAF;AAOD,GARM,CAAP;AASD;;AAED,gBAAe,OAAON,GAAP,EAAwBC,GAAxB,KAA6C;AAC1D,QAAMF,aAAa,CAACC,GAAD,EAAMC,GAAN,EAAWJ,IAAX,CAAnB;;AAEA,MAAI;AACFW,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,IAAhB;AACA,QAAIC,IAAI,GAAGhB,WAAW,CAAC,EAAD,CAAX,CAAgBiB,QAAhB,CAAyB,KAAzB,CAAX;AACA,UAAMlB,SAAS,CAACmB,SAAV,CAAoB;AAACC,MAAAA,GAAG,EAAEd,GAAG,CAACU,IAAJ,CAASK;AAAf,KAApB,EACJ;AAACC,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAEjB,GAAG,CAACU,IAAJ,CAASO,QADd;AAELC,QAAAA,YAAY,EAAElB,GAAG,CAACU,IAAJ,CAASQ,YAFlB;AAGLC,QAAAA,WAAW,EAAEnB,GAAG,CAACU,IAAJ,CAASS,WAHjB;AAILC,QAAAA,SAAS,EAAEpB,GAAG,CAACU,IAAJ,CAASU,SAJf;AAKLC,QAAAA,SAAS,EAAErB,GAAG,CAACU,IAAJ,CAASW,SALf;AAMLV,QAAAA,IAAI,EAAEA;AAND;AAAP,KADI,EAQA;AAACW,MAAAA,MAAM,EAAG,IAAV;AAAgBC,MAAAA,mBAAmB,EAAE;AAArC,KARA,CAAN;AASAf,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMf,SAAS,CAAC8B,IAAV,CAAe;AAAC,aAAOxB,GAAG,CAACU,IAAJ,CAASK;AAAjB,KAAf,CAAlB;AACAd,IAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAArB;AACD,GAdD,CAcE,OAAOkB,KAAP,EAAc;AACd5B,IAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB;AACD;AAEF,CArBD","sourcesContent":["import { NowRequest, NowResponse } from '@now/node'\r\nimport StockUser from '../../../../models/stockuser.model'\r\nimport { randomBytes } from \"crypto\"\r\nimport Cors from 'cors'\r\n\r\n// Initializing the cors middleware\r\nconst cors = Cors({\r\n  methods: ['GET', 'HEAD'],\r\n})\r\n\r\nfunction runMiddleware(req, res, fn) {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result) => {\r\n      if (result instanceof Error) {\r\n        return reject(result)\r\n      }\r\n\r\n      return resolve(result)\r\n    })\r\n  })\r\n}\r\n\r\nexport default async (req: NowRequest, res: NowResponse) => {\r\n  await runMiddleware(req, res, cors)\r\n\r\n  try {\r\n    console.log(req.body);\r\n    var code = randomBytes(12).toString('hex');\r\n    await StockUser.updateOne({_id: req.body.phoneNo}, \r\n      {$set: { \r\n        userName: req.body.userName,\r\n        grantAgeWise: req.body.grantAgeWise,\r\n        grantUpload: req.body.grantUpload,\r\n        grantEdit: req.body.grantEdit,\r\n        grantSale: req.body.grantSale,\r\n        code: code\r\n      }}, {upsert : true, setDefaultsOnInsert: true});\r\n    console.log(await StockUser.find({\"_id\": req.body.phoneNo}))\r\n    res.status(200).send(JSON.stringify(code));\r\n  } catch (error) {\r\n    res.status(502).send(error);\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}