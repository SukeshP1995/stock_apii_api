{"ast":null,"code":"import StockUser from '../../../../models/stockuser.model';\nimport { randomBytes } from \"crypto\";\nimport Cors from 'cors'; // Initializing the cors middleware\n\nconst cors = Cors({\n  methods: ['GET', 'HEAD']\n});\n\nfunction runMiddleware(req, res, fn) {\n  return new Promise((resolve, reject) => {\n    fn(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}\n\nexport default (async (req, res) => {\n  await runMiddleware(req, res, cors);\n\n  try {\n    const code = randomBytes(12).toString('hex');\n    const phoneNo = decodeURIComponent(req.query.phoneNo.toString());\n    await StockUser.updateOne({\n      _id: phoneNo\n    }, {\n      $set: {\n        code: code,\n        signed: false\n      }\n    }, {\n      upsert: true,\n      setDefaultsOnInsert: true\n    });\n    console.log((await StockUser.find({\n      \"_id\": phoneNo\n    }))[0]);\n    res.status(200).send(JSON.stringify(code));\n  } catch (error) {\n    res.status(502).send(error);\n  }\n});","map":{"version":3,"sources":["D:/code/stock_api/pages/api/units/users/add.ts"],"names":["StockUser","randomBytes","Cors","cors","methods","runMiddleware","req","res","fn","Promise","resolve","reject","result","Error","code","toString","phoneNo","decodeURIComponent","query","updateOne","_id","$set","signed","upsert","setDefaultsOnInsert","console","log","find","status","send","JSON","stringify","error"],"mappings":"AACA,OAAOA,SAAP,MAAsB,oCAAtB;AACA,SAAQC,WAAR,QAA0B,QAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,MAAMC,IAAI,GAAGD,IAAI,CAAC;AAChBE,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR;AADO,CAAD,CAAjB;;AAIA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,EAAjC,EAAqC;AACnC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,IAAAA,EAAE,CAACF,GAAD,EAAMC,GAAN,EAAYK,MAAD,IAAY;AACvB,UAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3B,eAAOF,MAAM,CAACC,MAAD,CAAb;AACD;;AAED,aAAOF,OAAO,CAACE,MAAD,CAAd;AACD,KANC,CAAF;AAOD,GARM,CAAP;AASD;;AAED,gBAAe,OAAON,GAAP,EAAwBC,GAAxB,KAA6C;AAC1D,QAAMF,aAAa,CAACC,GAAD,EAAMC,GAAN,EAAWJ,IAAX,CAAnB;;AAEA,MAAI;AACF,UAAMW,IAAI,GAAGb,WAAW,CAAC,EAAD,CAAX,CAAgBc,QAAhB,CAAyB,KAAzB,CAAb;AACA,UAAMC,OAAO,GAAGC,kBAAkB,CAACX,GAAG,CAACY,KAAJ,CAAUF,OAAV,CAAkBD,QAAlB,EAAD,CAAlC;AACA,UAAMf,SAAS,CAACmB,SAAV,CAAoB;AAACC,MAAAA,GAAG,EAAEJ;AAAN,KAApB,EAAoC;AAACK,MAAAA,IAAI,EAAE;AAAEP,QAAAA,IAAI,EAAEA,IAAR;AAAcQ,QAAAA,MAAM,EAAE;AAAtB;AAAP,KAApC,EAA2E;AAACC,MAAAA,MAAM,EAAG,IAAV;AAAgBC,MAAAA,mBAAmB,EAAE;AAArC,KAA3E,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,MAAM1B,SAAS,CAAC2B,IAAV,CAAe;AAAC,aAAOX;AAAR,KAAf,CAAP,EAAyC,CAAzC,CAAZ;AACAT,IAAAA,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAArB;AACD,GAND,CAME,OAAOkB,KAAP,EAAc;AACdzB,IAAAA,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB;AACD;AAEF,CAbD","sourcesContent":["import { NowRequest, NowResponse } from '@now/node'\r\nimport StockUser from '../../../../models/stockuser.model'\r\nimport {randomBytes} from \"crypto\"\r\nimport Cors from 'cors'\r\n\r\n// Initializing the cors middleware\r\nconst cors = Cors({\r\n  methods: ['GET', 'HEAD'],\r\n})\r\n\r\nfunction runMiddleware(req, res, fn) {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result) => {\r\n      if (result instanceof Error) {\r\n        return reject(result)\r\n      }\r\n\r\n      return resolve(result)\r\n    })\r\n  })\r\n}\r\n\r\nexport default async (req: NowRequest, res: NowResponse) => {\r\n  await runMiddleware(req, res, cors)\r\n\r\n  try {\r\n    const code = randomBytes(12).toString('hex');\r\n    const phoneNo = decodeURIComponent(req.query.phoneNo.toString());\r\n    await StockUser.updateOne({_id: phoneNo}, {$set: { code: code, signed: false }}, {upsert : true, setDefaultsOnInsert: true});\r\n    console.log((await StockUser.find({\"_id\": phoneNo}))[0])\r\n    res.status(200).send(JSON.stringify(code));\r\n  } catch (error) {\r\n    res.status(502).send(error);\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}