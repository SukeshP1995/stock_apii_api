{"ast":null,"code":"import { Schema, Mongoose } from \"mongoose\";\nconst mongoose = new Mongoose();\nmongoose.connect(\"mongodb+srv://sukeshp:x21qkXQYjY5XbopS@cluster0-lxsof.mongodb.net/test?retryWrites=true\", {\n  useNewUrlParser: true\n});\nconst unitSchema = new Schema({\n  _id: String,\n  engineNo: {\n    type: String,\n    required: true\n  },\n  model: {\n    type: String,\n    required: true\n  },\n  color: {\n    type: String,\n    required: true\n  },\n  entryDate: {\n    type: Date,\n    required: true\n  },\n  saleDate: {\n    type: Date,\n    required: false\n  },\n  saleType: {\n    type: String,\n    enum: [\"Counter\", \"Network\"],\n    required: false\n  },\n  transactionType: {\n    typr: String,\n    enum: [\"Cash\", \"Finance\"]\n  },\n  checkpoint: {\n    type: String,\n    required: () => this.soldType === \"Network\"\n  },\n  financeName: {\n    type: String,\n    required: () => this.soldType === \"Counter\" && this.transactionType == \"Finance\"\n  }\n});\nexport default mongoose.model('Unit', unitSchema);","map":{"version":3,"sources":["D:/code/stock_api/models/unit.model.ts"],"names":["Schema","Mongoose","mongoose","connect","useNewUrlParser","unitSchema","_id","String","engineNo","type","required","model","color","entryDate","Date","saleDate","saleType","enum","transactionType","typr","checkpoint","soldType","financeName"],"mappings":"AAAA,SAAUA,MAAV,EAAkBC,QAAlB,QAAiC,UAAjC;AAEA,MAAMC,QAAQ,GAAG,IAAID,QAAJ,EAAjB;AAEAC,QAAQ,CAACC,OAAT,CAAiB,yFAAjB,EAA4G;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA5G;AAEA,MAAMC,UAAkB,GAAG,IAAIL,MAAJ,CAAW;AAClCM,EAAAA,GAAG,EAAEC,MAD6B;AAElCC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,IAAI,EAAEF,MAAP;AAAeG,IAAAA,QAAQ,EAAE;AAAzB,GAFwB;AAGlCC,EAAAA,KAAK,EAAE;AAACF,IAAAA,IAAI,EAAEF,MAAP;AAAeG,IAAAA,QAAQ,EAAE;AAAzB,GAH2B;AAIlCE,EAAAA,KAAK,EAAE;AAACH,IAAAA,IAAI,EAAEF,MAAP;AAAeG,IAAAA,QAAQ,EAAE;AAAzB,GAJ2B;AAKlCG,EAAAA,SAAS,EAAE;AAACJ,IAAAA,IAAI,EAAEK,IAAP;AAAaJ,IAAAA,QAAQ,EAAE;AAAvB,GALuB;AAMlCK,EAAAA,QAAQ,EAAE;AAACN,IAAAA,IAAI,EAAEK,IAAP;AAAaJ,IAAAA,QAAQ,EAAE;AAAvB,GANwB;AAOlCM,EAAAA,QAAQ,EAAE;AAACP,IAAAA,IAAI,EAAEF,MAAP;AAAeU,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,CAArB;AAA6CP,IAAAA,QAAQ,EAAE;AAAvD,GAPwB;AAQlCQ,EAAAA,eAAe,EAAE;AAACC,IAAAA,IAAI,EAAEZ,MAAP;AAAeU,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT;AAArB,GARiB;AASlCG,EAAAA,UAAU,EAAE;AAACX,IAAAA,IAAI,EAAEF,MAAP;AAAeG,IAAAA,QAAQ,EAAE,MAAM,KAAKW,QAAL,KAAkB;AAAjD,GATsB;AAUlCC,EAAAA,WAAW,EAAE;AAACb,IAAAA,IAAI,EAAEF,MAAP;AAAeG,IAAAA,QAAQ,EAAE,MAAO,KAAKW,QAAL,KAAkB,SAAlB,IAA+B,KAAKH,eAAL,IAAwB;AAAvF;AAVqB,CAAX,CAA3B;AAaA,eAAehB,QAAQ,CAACS,KAAT,CAAe,MAAf,EAAuBN,UAAvB,CAAf","sourcesContent":["import  { Schema, Mongoose} from \"mongoose\"\r\n\r\nconst mongoose = new Mongoose();\r\n\r\nmongoose.connect(\"mongodb+srv://sukeshp:x21qkXQYjY5XbopS@cluster0-lxsof.mongodb.net/test?retryWrites=true\", { useNewUrlParser: true });\r\n\r\nconst unitSchema: Schema = new Schema({\r\n    _id: String,\r\n    engineNo: {type: String, required: true},\r\n    model: {type: String, required: true},\r\n    color: {type: String, required: true},\r\n    entryDate: {type: Date, required: true},\r\n    saleDate: {type: Date, required: false},\r\n    saleType: {type: String, enum: [\"Counter\", \"Network\"], required: false},\r\n    transactionType: {typr: String, enum: [\"Cash\", \"Finance\"]},\r\n    checkpoint: {type: String, required: () => this.soldType === \"Network\"},\r\n    financeName: {type: String, required: () => (this.soldType === \"Counter\" && this.transactionType == \"Finance\")},\r\n});\r\n\r\nexport default mongoose.model('Unit', unitSchema);\r\n\r\n"]},"metadata":{},"sourceType":"module"}